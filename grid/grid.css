html {
      box-sizing: border-box;
      font-size: 16px;
      font-family: sans-serif;
      scroll-behavior: smooth;
}

*,
*::after,
*::before {
    box-sizing: inherit;
    }

a[href="#top"] {
      margin: 1rem;
      display: block;
      font-size: 2rem;
      text-align: center;
      text-decoration: none;
    }

    p {
      margin: 0;
    }

    h2 {
      margin-top: 50vh;
      text-align: center;
    }

    img {
      margin: auto;
      display: block;
      max-width: 100%;
      height: auto;
    }

    .menu {
      margin-bottom: 100vh;
      font-size: 125%;
    }

    .menu li {
      margin-bottom: 1rem;
    }

    .container {
      margin: 0 auto;
      width: 80%;
      height: 80vh;
      background-color: #222;
      border: medium solid #000;
    }
.item {
      padding: 1rem;
      font-size: 1.25rem;
      background-color: #666;
      border: medium solid #999;
    }

.grid-explicit{
    display: grid;
    grid-template-rows: 20% 10vw 2 rem;
    grid-template-rows: repeat(5,1fr); /* cuantas columnas*/
    grid-template-columns: repeat(4, 1fr); /* cuantas filas*/

    grid-template-columns: 20% repeat(2,30%) 20%;
    grid-template-rows:repeat(5, auto);
    grid-template: repeat(5, auto)/ 20% repeat(2,30%) 20%; /*shorthand de grid template row y column */
    column-gap: 2vh;
    row-gap: 3vw;
    gap: 2vh 1vw;  /* borde de las lineas 1er row 2do column*/
    gap: 0;

}
.grid-explicit .item:nth-child(10){
    grid-row-start: 2;
    grid-row-end: 3;
    grid-column-start: 2;
    grid-column-end: 3;
    grid-row: 2/3;  /*shorthand de grid row start y end */
    grid-column:  2/3; /*shorthand de grid column start y end */
    grid-area:  2/3 / 2/3; /*shorthand de  grid row y column start y end row start/ column start/ row end /  column end */
    color: coral;
}
.grid-explicit .item:nth-child(12){
    color: coral;
    grid-row: span 2;
    grid-column: span 3;

}
.grid-explicit .item:nth-child(15){
    color: coral;
    grid-row: 1/span 2; /* posicion uno y abarque 3 filas*/
    grid-column: 1/span 2;

}
.grid-line-names{
    display: grid;
    grid-template: repeat(3, 1fr) / repeat(3, 1fr);
    grid-template-columns: [linea-c1] 1fr [linea-c2] 1fr  [linea-c3] 1fr   [linea-c4] ;  /* crear grid con nombres*/
    grid-template-rows: [linea-r1] 1fr [linea-r2] 1fr [linea-r3] 1fr  [linea-r4] ;
}
.grid-line-names .item:nth-child(3){
    color:cyan;
    grid-row: linea-r3 / fflinea-r4;/* posicionar con el nombre*/
    grid-column: linea-c1 / linea-c4;
}
.grid-areas{
    display: grid;
    grid-template-columns: 1fr 200px;
    grid-template-rows: 100px repeat(2,1fr) 70px ;
    grid-template-areas:
    "header header"
    "content sidebar"/* primera columna de la 2 fila quiero content y en la segunda columna quiero sidebar*/
    "content ." /* punto es para dejar celda vacia*/
     "footer footer";
}
.header{
    grid-area: header;
}
.content{
    grid-area: content;
}
.sidebar{
    grid-area: sidebar;
}
.footer{
    grid-area: footer;
}

.grid-implicit {
    display: inline-grid; /* bloque*/
     display: grid;
    grid-template-columns:repeat(4,1fr);
    grid-template-rows: repeat(3,200px);
}
.grid-flow{
    display: grid;
    grid-template-columns:repeat(5,1fr);
    grid-template-rows: repeat(3,150px);
    grid-auto-flow: column; /*cambiar el orden de los items*/
    grid-auto-rows: 100px; /* las filas implicitas toman 100 px del espacio sobrante */
    grid-auto-columns: 100px;
}
.grid-dense {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(4, 200px);
    grid-auto-flow:  row dense; /*se ocuparan los elementos que esten vacios */
     /* si esta en fila genera mas filas y columna genera mas columnas*/
}
.grid-dense .item:nth-child(4){
    color: coral;
    grid-row: span 3;
    grid-column: span 3;
}
.grid-layers{
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
}
.grid-layers .item:nth-child(1){
    background-color: #E5EB1B;
    grid-area: 1/1 /3/3;
    grid-column: 1/3;
    grid-row: 1/3;
}
.grid-layers .item:nth-child(2){
    background-color: #82E737;
    grid-area: 1/3 /3/5;
}
.grid-layers .item:nth-child(3){
    background-color: #376FE7;
    grid-area: 3/1 /5/3;
}
.grid-layers .item:nth-child(4){
    background-color: #376FE7;
    grid-area: 3/3 /5/5;
}
.grid-layers .item:nth-child(5){
    background-color: #E76737;
    grid-area: 2/2 /4/4;
}
.grid-order{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);
}
.grid-order .item:nth-child(1){
    order: 1;
}
.grid-order .item:nth-child(2){
    order: 2;
}
.grid-order .item:nth-child(5){

    order: -1;
}
.grid-align{
    display: grid;
    grid-template-columns: repeat(3, 200px);
    grid-template-rows: repeat(2, 200px);
    justify-items: center; /* alinear los items en su celda en eje x */
    align-items: center;/* alinear los itemsen su celda en eje y*/
}
.grid-align .item:nth-child(4){
    justify-self: start;
    align-self: start;
}
.grid-align-tracks{
    display: grid;
    grid-template-columns: repeat(3, 200px);
    grid-template-rows: repeat(2, 200px);
        justify-content: space-evenly; /* alinear en conjunto los tracks en eje horizontal x */
    align-content: space-evenly /* alinear en conjunto los tracks en eje vertical y */
}
.grid-min-max{
    display: grid;
      grid-template-columns: repeat(4, 1fr);
    grid-template-columns: repeat(4, minmax(100px, 200px));/*tama単o minimo que debe tener la columna y el tama単o maximo de la columna */
      grid-template-columns: repeat(4, minmax(min-content, 250px));
     grid-template-columns: repeat(4, minmax(100px, min-content)); /* min content es el tama単o que ocupa el contenido en la celda dependiendo si se deja en min o max*/
    grid-template-columns: repeat(4, minmax(100px, max-content));/* max content es el tama単o que ocupa el contenido en la celda dependiendo si se deja en min o max*/
     grid-template-columns: repeat(4, minmax(max-content, 200px));
   grid-template-columns: repeat(4, minmax(min-content,max-content));

}
.grid-repeat{
    /*repeat solo se puede usar en template columns y rows*/
    display: grid;
   grid-template-columns: repeat(4, 10% 20% 40% 30%); /* se repite 4 veces el patron explicito*/
    grid-template-columns: repeat(1, 10% 20% 40% 30%);
     grid-template-rows: repeat(2, 10vh 20vh) ;
    grid-auto-rows: 150px;
}
.grid-dynamics{
    display:grid;
     grid-template-columns: repeat(auto-fill,100px);/*autofill rellena la grid con tracks generados dinamicamente*/
     grid-template-columns: repeat(auto-fit,100px); /*autofit ajusta la grid con tracks existentes*/
}
.grid-responsive{
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(270px, 1fr));
    grid-template-rows: repeat(auto-fill, minmax(270px, 1fr));
}